@using VocaDb.Web.Code
@using VocaDb.Web.Helpers
@using VocaDb.Web.Models.Shared.Partials.ArchivedEntry
@using VocaDb.Web.Models.Shared.Partials.EntryDetails
@using VocaDb.Web.Models.Shared.Partials.Song
@using VocaDb.Web.Models.Song
@model VocaDb.Model.DataContracts.Songs.ArchivedSongVersionDetailsContract

@{
	
	if (Model.Song != null) {
		ViewBag.Parents = new[] {
			Html.ActionLink("Song", "Index", "Search", UrlMapper.Search.Songs(), null),
			Html.ActionLink(Model.Song.Name, "Details", new { id = Model.Song.Id }),
			Html.ActionLink("Revisions", "Versions", new { id = Model.Song.Id })
		};
	} else {
		ViewBag.Parents = new[] {
			Html.ActionLink("Song", "Index", "Search", UrlMapper.Search.Songs(), null)
		};
	}

}

@section Toolbar {
@if (Login.CanRevertEntryVersions && Model.CanBeReverted) {
	<a asp-action="RevertToVersion" asp-route-archivedSongVersionId="@(Model.ArchivedVersion.Id)" id="@("revertLink")" onclick="@(string.Format("return confirm(\"{0}\");", ViewRes.ViewVersionStrings.ConfirmRevertToVersion))">@(ViewRes.ViewVersionStrings.RevertToVersion)</a>
}
&nbsp;
<a href="@Url.Action("ArchivedVersionXml", new { id = Model.ArchivedVersion.Id })" id="downloadXmlLink">Download XML</a>
<a href="#" id="reportEntryLink" data-bind="click: reportViewModel.show">@ViewRes.EntryDetailsStrings.ReportAnError</a>
@if (Login.CanViewHiddenRevisions) {
	if (Model.ArchivedVersion.Hidden) {
		<a asp-action="UpdateVersionVisibility" asp-route-archivedVersionId="@(Model.ArchivedVersion.Id)" asp-route-hidden="@(false)" id="@("showLink")" onclick="@(string.Format("return confirm(\"{0}\");", ViewRes.ViewVersionStrings.ConfirmUnhide))">@(ViewRes.ViewVersionStrings.UnhideVersion)</a>
	} else {
		<a asp-action="UpdateVersionVisibility" asp-route-archivedVersionId="@(Model.ArchivedVersion.Id)" asp-route-hidden="@(true)" id="@("hideLink")" onclick="@(string.Format("return confirm(\"{0}\");", ViewRes.ViewVersionStrings.ConfirmHide))">@(ViewRes.ViewVersionStrings.HideVersion)</a>
	}
}
}

@if (Model.ArchivedVersion.Hidden) {
	<partial name="Partials/EntryDetails/_HiddenBanner" />
}

@if (Model.ComparableVersions.Any()) {
	using (Html.BeginForm("ViewVersion", "Song", FormMethod.Post, new { @class = "form form-inline" })) {
		@:Compare to: @Html.DropDownListFor(m => m.ComparedVersionId, ViewHelper.CreateSelectList(Model.ComparableVersions, i => i.Id, i => i.Version + " (" + Versions.GetChangeString(i.ChangedFields) + " by " + i.AgentName + ")", Model.ComparedVersionId), new { @class = "input-xlarge", onchange = "$(this).closest('form').submit();" })
		<button type="submit" class="btn btn-primary">Compare</button>
	}
}

<partial name="Partials/ArchivedEntry/_ArchivedObjectVersionProperties" model="@(new ArchivedObjectVersionPropertiesViewModel(Versions.CreateForSong(Model.ArchivedVersion), Model.ComparedVersion != null ? Versions.CreateForSong(Model.ComparedVersion) : null))" />

<partial name="Partials/Song/_PrintArchivedSongData" model="@(new PrintArchivedSongDataViewModel(Model.Versions))" />

<partial name="Partials/EntryDetails/_ReportEntryVersionPopupKnockout" model="@(new ReportEntryVersionPopupKnockoutViewModel())" />

@section BodyScripts {
    <script type="text/javascript">
		var model = {
			archivedVersion: {
				version: @Model.ArchivedVersion.Version,
			},
			song: {
				id: @Model.Song.Id,
			},
		};
		app.SongViewVersion(model);
    </script>
}