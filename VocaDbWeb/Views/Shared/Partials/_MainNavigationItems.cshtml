@using VocaDb.Model.Domain
@using VocaDb.Model.Domain.Security
@using VocaDb.Model.Utils.Search
@using VocaDb.Web.Helpers
@inherits VocaDb.Web.Code.MenuPage

<ul class="nav nav-list">
	<li><a asp-action="Index" asp-controller="Home">@(ViewRes._LayoutStrings.Home)</a></li>
	<li>
		<a asp-action="Index" asp-controller="Search" asp-route-searchType="@(SearchType.Artist)">@(ViewRes.SharedStrings.Artists)</a>
		<ul>
			@if (Login.CanManageDb) {
				<li><a asp-action="Create" asp-controller="Artist">@(ViewRes._LayoutStrings.AddArtist)</a></li>
			}
		</ul>
	</li>
	<li>
		<a asp-action="Index" asp-controller="Search" asp-route-searchType="@(SearchType.Album)">@(ViewRes.SharedStrings.Albums)</a>
		<ul>
			@if (Login.CanManageDb) {
				<li><a asp-action="Create" asp-controller="Album">@(ViewRes._LayoutStrings.AddAlbum)</a></li>
			}
			<li>@Html.ActionLink(ViewRes.SharedStrings.TopRatedAlbums, "Index", "Search", new SearchRouteParams { searchType = SearchType.Album, sort = VocaDb.Model.Service.AlbumSortRule.RatingAverage }, null)</li>
			<li>@Html.ActionLink(ViewRes._LayoutStrings.NewAlbums, "Index", "Search", new SearchRouteParams { searchType = SearchType.Album, sort = VocaDb.Model.Service.AlbumSortRule.ReleaseDate }, null)</li>
			<li><a asp-action="Index" asp-controller="Search" asp-route-searchType="@("Album")" asp-route-tagId="@(Config.SpecialTags.Free)" asp-route-childTags="@(true.ToString().ToLowerInvariant())">@(ViewRes._LayoutStrings.FreeAlbums)</a></li>
		</ul>
	</li>
	<li>
		@Html.ActionLink(ViewRes.SharedStrings.Songs, "Index", "Search", new SearchRouteParams{ searchType = SearchType.Song }, null)
		<ul>
			@if (Login.CanManageDb) {
				<li><a asp-action="Create" asp-controller="Song">@(ViewRes._LayoutStrings.AddSong)</a></li>
			}
			<li><a asp-action="Rankings" asp-controller="Song" asp-route-durationHours="168">@(ViewRes.SharedStrings.TopFavoritedSongs)</a></li>
			<li><a asp-action="Index" asp-controller="Search" asp-route-searchType="@SearchType.Song" asp-route-sort="@VocaDb.Model.Service.SongSortRule.AdditionDate" asp-route-onlyWithPVs="@true.ToString().ToLowerInvariant()">@ViewRes._LayoutStrings.NewPVs</a></li>
		</ul>
	</li>
	<li>
		@Html.ActionLink(ViewRes.SharedStrings.ReleaseEvents, "Index", "Search", new SearchRouteParams{ searchType = SearchType.ReleaseEvent }, null)		
		<ul>
			<li><a asp-action="Index" asp-controller="Event">@(ViewRes._LayoutStrings.UpcomingEvents)</a></li>
		</ul>
	</li>
	<li><a asp-action="Featured" asp-controller="SongList">@(ViewRes.SharedStrings.FeaturedSongLists)</a></li>
	<li><a asp-action="Index" asp-controller="Tag">@(ViewRes._LayoutStrings.Tags)</a></li>
	<li><a asp-action="Index" asp-controller="User">@(ViewRes.SharedStrings.Users)</a></li>
	<li><a asp-action="Index" asp-controller="Help">@(ViewRes._LayoutStrings.Help)</a></li>
	<li><a asp-action="Index" asp-controller="Discussion" asp-route-clientPath="@("")">@(ViewRes._LayoutStrings.Discussions)</a></li>
	<li><a href="https://wiki.vocadb.net/">@ViewRes._LayoutStrings.Wiki</a></li>
	<li><a href="@BlogUrl">@ViewRes._LayoutStrings.Blog</a></li>
	@if (Login.Manager.HasPermission(PermissionToken.MikuDbImport)) {
		<li><a asp-action="Index" asp-controller="MikuDbAlbum">@(ViewRes._LayoutStrings.MikuDbAlbum)</a></li>		 
	}
	@if (Login.CanAccessManageMenu) {
		<li><a asp-action="Index" asp-controller="Admin">@(ViewRes._LayoutStrings.Manage)</a></li>
	}
	@if (!Login.Manager.IsLoggedIn) {
		<li><a href="@Url.Action("Login", "User")" onclick="app.functions.showLoginPopup(); return false;">@ViewRes._LayoutStrings.LogIn</a></li>
		<li><a asp-action="Create" asp-controller="User">@(ViewRes._LayoutStrings.Register)</a></li>
	}
</ul>

