@using VocaDb.Web.Code
@using VocaDb.Web.Helpers
@using VocaDb.Web.Models.Shared.Partials.ArchivedEntry
@using VocaDb.Web.Models.Shared.Partials.EntryDetails
@using VocaDb.Web.Models.Shared.Partials.Event
@model VocaDb.Web.Models.Shared.ViewVersion<VocaDb.Model.DataContracts.ReleaseEvents.ArchivedEventVersionDetailsContract>

@{

	if (Model.Entry.ReleaseEvent != null) {
		ViewBag.Parents = new[] {
			Html.ActionLink("Events", "Index"),
			Html.ActionLink(Model.Entry.ReleaseEvent.Name, "Details", new { id = Model.Entry.ReleaseEvent.Id, slug = Model.Entry.ReleaseEvent.UrlSlug }),
			Html.ActionLink("Revisions", "Versions", new { id = Model.Entry.ReleaseEvent.Id })
		};
	} else {
		ViewBag.Parents = new[] {
			Html.ActionLink("Events", "Index"),
		};
	}

}

@section Toolbar {
	<a href="@Url.Action("ArchivedVersionXml", new { id = Model.Entry.ArchivedVersion.Id })" id="downloadXmlLink">Download XML</a>
	<a href="#" id="reportEntryLink" data-bind="click: reportViewModel.show">@ViewRes.EntryDetailsStrings.ReportAnError</a>
	@if (Login.CanViewHiddenRevisions) {
		if (Model.Entry.ArchivedVersion.Hidden) {
			<a asp-action="UpdateVersionVisibility" asp-route-archivedVersionId="@(Model.Entry.ArchivedVersion.Id)" asp-route-hidden="@(false)" id="@("showLink")" onclick="@(string.Format("return confirm(\"{0}\");", ViewRes.ViewVersionStrings.ConfirmUnhide))">@(ViewRes.ViewVersionStrings.UnhideVersion)</a>
		} else {
			<a asp-action="UpdateVersionVisibility" asp-route-archivedVersionId="@(Model.Entry.ArchivedVersion.Id)" asp-route-hidden="@(true)" id="@("hideLink")" onclick="@(string.Format("return confirm(\"{0}\");", ViewRes.ViewVersionStrings.ConfirmHide))">@(ViewRes.ViewVersionStrings.HideVersion)</a>
		}
	}
}

@if (Model.Entry.ArchivedVersion.Hidden) {
	<partial name="Partials/EntryDetails/_HiddenBanner" />
}

@if (Model.Entry.ComparableVersions.Any()) {
	using (Html.BeginForm("ViewVersion", "Event", FormMethod.Post, new { @class = "form form-inline" })) {
		@:Compare to: @Html.DropDownListFor(m => m.ComparedVersionId, ViewHelper.CreateSelectList(Model.Entry.ComparableVersions, i => i.Id, i => i.Version + " (" + i.TranslateChangedFields(Model.EnumTranslations) + " by " + i.AgentName + ")", Model.Entry.ComparedVersionId), new { @class = "input-xlarge", onchange = "$(this).closest('form').submit();" })
		<button type="submit" class="btn btn-primary">Compare</button>
	}
}

<partial name="Partials/ArchivedEntry/_ArchivedObjectVersionProperties" model="@(new ArchivedObjectVersionPropertiesViewModel(Model.Version(Model.Entry.ArchivedVersion), Model.Version(Model.Entry.ComparedVersion)))" />

<partial name="Partials/Event/_PrintArchivedEventData" model="@(new PrintArchivedEventDataViewModel(Model.Entry.Versions))" />

<partial name="Partials/EntryDetails/_ReportEntryVersionPopupKnockout" model="@(new ReportEntryVersionPopupKnockoutViewModel())" />

@section BodyScripts {
	<script type="text/javascript">
		var model = {
			entry: {
				archivedVersion: {
					version: @Model.Entry.ArchivedVersion.Version,
				},
				releaseEvent: {
					id: @Model.Entry.ReleaseEvent.Id,
				},
			},
		};
		app.EventViewVersion(model);
	</script>
}